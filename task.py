# -*- coding: utf-8 -*-
"""Task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17lftqN7L_FL1uqTgRXpxgSOXColgECAE
"""

import cv2
import matplotlib.pyplot as plt

#load the post images
post = cv2.imread('/content/Post.jpg')
gpost= cv2.cvtColor(post, cv2.COLOR_BGR2GRAY)
plt.imshow(gpost)
plt.title('Post Image')
plt.xticks([])
plt.yticks([])

#load the pre image
pre = cv2.imread('/content/Pre.jpg')
gpre= cv2.cvtColor(pre, cv2.COLOR_BGR2GRAY)
plt.imshow(gpre)
plt.title('Pre Image')
plt.xticks([])
plt.yticks([])
print(gpre.shape)

from skimage.measure import compare_ssim

# compare the difference between two images through  SSIM
(score, diff) = compare_ssim(gpost, gpre, full=True)
print("Image similarity", score)

# convert the distance to 8-bit unsigned integers 
 
diff = (diff * 766).astype("uint8")

import numpy as np

#defining the threshold of differnce image after that we will find contour to obtain the regins of the
#wo input image that differ

thresh = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]
contours = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
contours = contours[0] if len(contours) ==2  else contours[1]

for c in contours:
    area = cv2.contourArea(c)
    if area > 10:
        x,y,w,h = cv2.boundingRect(c)
        cv2.rectangle(post, (x, y), (x + w, y + h), (36,255,12), 2)
        cv2.rectangle(pre, (x, y), (x + w, y + h), (36,255,12), 2)
        

        

plt.imshow(post)

plt.imshow(pre)

plt.imshow(diff)

titles = ['Post Image','Pre Image','Difference']
images = [post, pre, diff]

for i in range(3):
    plt.subplot(2,3,i+1),plt.imshow(images[i],'gray')
    plt.title(titles[i])
    plt.xticks([])
    plt.yticks([])

plt.show()

